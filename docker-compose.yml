version: "3.8"

services:

# #############################################################################################
# ###                                 TrafficCourt FRONTEND                                 ###
# #############################################################################################
  citizen-portal:
    container_name: citizen-portal
    build:
      context: ./src/frontend/citizen-portal
    environment: 
      - USE_MOCK_SERVICES=false
      - USE_KEYCLOAK=true
      - API_URL=http://localhost:4300/api
      - KEYCLOAK_URL=http://keycloak:8081/auth
      - KEYCLOAK_REALM=traffic-court
      - KEYCLOAK_CLIENT_ID=test
    command: "nginx -g 'daemon off;'"     
    restart: always
    ports:
      - "4201:8080"
    networks:
      - traffic-court-net

#############################################################################################
###                                 TrafficCourt DEMO                                     ###
#############################################################################################  
  citizen-portal-demo:
    container_name: citizen-portal-demo
    build:
      context: ./src/frontend/citizen-portal
    environment: 
      - USE_MOCK_SERVICES=true
      - USE_KEYCLOAK=false
    command: "nginx -g 'daemon off;'"     
    restart: always
    ports:
      - "4200:8080"
    networks:
      - traffic-court-net

#############################################################################################
###                                  KEYCLOAK                                             ###
#############################################################################################  
  keycloak:
    image: quay.io/keycloak/keycloak
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: http://localhost:8081/auth
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 8081:8080
    networks:
      - traffic-court-net

# #############################################################################################
# ###                                  KEYCLOAK CONFIG                                      ###
# #############################################################################################  
  keycloak-config:
    build:
      context: ./infrastructure/keycloak
      args:
        - KEYCLOAK_URL=http://keycloak:8080
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s -wait-retry-interval 10s /tmp/createuser.sh"
    networks:
      - traffic-court-net

#############################################################################################
###                                  SPLUNK                                               ###
#############################################################################################  
  splunk:
    image: ${SPLUNK_IMAGE:-splunk/splunk:latest}
    container_name: splunk
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_HEC_TOKEN=${SPLUNK_HEC_TOKEN}
      - SPLUNK_PASSWORD=${SPLUNK_PASSWORD}
    ports:
      - 8000:8000
      - 8088:8088
    networks:
      - traffic-court-net


#############################################################################################
###                                  REDIS & REDIS COMMANDER                              ###
#############################################################################################  
  redis:
    container_name: redis
    image: redis
    hostname: ${REDIS__HOST}
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "${REDIS__PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - traffic-court-net
    environment: 
      - REDIS_PASSWORD="${REDIS__PASSWORD}"
    volumes:
      - data-redis:/data
    restart: always

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander
    restart: always
    depends_on: [redis]
    networks: 
      - traffic-court-net
    ports:
      - "8085:8081"
    environment:
      - REDIS_HOST=${REDIS__HOST}
      - REDIS_PASSWORD="${REDIS__PASSWORD}"

volumes:
  data-redis:

  
networks:
  traffic-court-net:
    driver: "bridge"    